{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Desktop/smileai/src/Camera.js\";\nimport React from 'react';\nimport Webcam from 'react-webcam';\nimport { Container, Row, Col, Jumbotron } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css';\n\nclass Camera extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      video: null\n    };\n    this.handleVideo = this.handleVideo.bind(this);\n    this.handleVideoError = this.handleVideoError.bind(this);\n  }\n\n  componentDidMount() {\n    /*navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia;\n      \tif (navigator.getUserMedia) {\n          \tnavigator.getUserMedia({video: true}, this.handleVideo, this.handleVideoError);\n      \t}*/\n    var constraints = {\n      audio: true,\n      video: {\n        width: 500,\n        height: 500\n      }\n    };\n    navigator.mediaDevices.getUserMedia(constraints).then(function (mediaStream) {\n      var video = document.querySelector(\"video\");\n      video.srcObject = mediaStream;\n\n      video.onloadedmetadata = function (e) {\n        video.play();\n      };\n    }).catch(function (err) {\n      console.log(err.name + \": \" + err.message);\n    }); // always check for errors at the end.\n  }\n\n  handleVideo(stream) {\n    console.log(window.URL.createObjectURL(stream)); //console.log(window.URL.createObjectURL(stream))\n    //this.setState({video: window.URL.createObjectURL(stream)})\n  }\n\n  handleVideoError() {\n    console.log(\"no video\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }\n    }, \"smileAI\")), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Simple AI that detects smiles. Positive vibes only.\")), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Neural network built without any deep learning libraries (only numpy).\")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      id: \"video\",\n      autoPlay: true,\n      src: this.state.video,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default Camera;","map":{"version":3,"sources":["/Users/ethan/Desktop/smileai/src/Camera.js"],"names":["React","Webcam","Container","Row","Col","Jumbotron","Camera","Component","constructor","props","state","video","handleVideo","bind","handleVideoError","componentDidMount","constraints","audio","width","height","navigator","mediaDevices","getUserMedia","then","mediaStream","document","querySelector","srcObject","onloadedmetadata","e","play","catch","err","console","log","name","message","stream","window","URL","createObjectURL","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Webcam from 'react-webcam';\nimport {Container, Row, Col, Jumbotron} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css';\nclass Camera extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state ={\n\t\t\tvideo: null,\n\t\t}\n\t\tthis.handleVideo = this.handleVideo.bind(this);\n\t\tthis.handleVideoError = this.handleVideoError.bind(this);\n\t}\n\tcomponentDidMount(){\n\t\t/*navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia;\n    \tif (navigator.getUserMedia) {\n        \tnavigator.getUserMedia({video: true}, this.handleVideo, this.handleVideoError);\n    \t}*/\n    \tvar constraints = { audio: true, video: { width: 500, height: 500 } };\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then(function(mediaStream) {\n        var video = document.querySelector(\"video\");\n\n        video.srcObject = mediaStream;\n        video.onloadedmetadata = function(e) {\n          video.play();\n        };\n      })\n      .catch(function(err) {\n        console.log(err.name + \": \" + err.message);\n      }); // always check for errors at the end.\n\t}\n\thandleVideo(stream){\n\t\tconsole.log(window.URL.createObjectURL(stream))\n\t\t//console.log(window.URL.createObjectURL(stream))\n\t\t//this.setState({video: window.URL.createObjectURL(stream)})\n\t}\n\n\thandleVideoError(){\n\t\tconsole.log(\"no video\")\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<Container fluid>\n\t\t\t\t\t<Jumbotron>\n\t\t\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t  \t\t<h1 className=\"title\">smileAI</h1>\n\t\t\t\t\t  \t</Row>\n\t\t\t\t\t  \t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t\t  <p>\n\t\t\t\t\t\t    Simple AI that detects smiles. Positive vibes only.\n\t\t\t\t\t\t  </p>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<small>Neural network built without any deep learning libraries (only numpy).</small>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Jumbotron>\n\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t    <Col xs={6}><video id=\"video\" autoPlay={true} src={this.state.video}></video></Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\n\t\t)\n\t}\n}\n\nexport default Camera;"]},"metadata":{},"sourceType":"module"}